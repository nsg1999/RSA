from Crypto.Util.number import *

from Crypto.PublicKey import RSA
import gmpy2
from gmpy2 import *


modulus_list = [143786356117385195355522728814418684024129402954309769186869633376407480449846714776247533950484109173163811708549269029920405450237443197994941951104068001708682945191370596050916441792714228818475059839352105948003874426539429621408867171203559281132589926504992702401428910240117807627890055235377744541913L,
 73988726804584255779346831019194873108586184186524793132656027600961771331094234332693404730437468912329694216269372797532334390363774803642809945268154324370355113538927414351037561899998734391507272602074924837440885467211134022878597523920836541794820777951492188067045604789153534513271406458984968338509L,
 95666403279611361071535593067846981517930129087906362381453835849857496766736720885263927273295086034390557353492037703154353541274448884795437287235560639118986397838850340017834752502157881329960725771502503917735194236743345777337851076649842634506339513864285786698870866229339372558162315435127197444193L, 
 119235191922699211973494433973985286182951917872084464216722572875998345005104112625024274855529546680909781406076412741844254205002739352725207590519921992295941563460138887173402493503653397592300336588721082590464192875253265214253650991510709511154297580284525736720396804660126786258245028204861220690641L]

e = [114194L, 130478L, 122694L, 79874L]


def fun1():
	for i in range(len(modulus_list)):
		for j in range(len(modulus_list)):
			if(GCD(modulus_list[i], modulus_list[j]) != 1 and i!=j):
				return(GCD(modulus_list[i], modulus_list[j]))
				
def eGCD(a, b):
	if a==0:
		return [b,0, 1]
	else:
		gcd, x, y= eGCD(b%a, a)
		return (gcd, y- (b/a)*x, x)

p = fun1()
q = modulus_list[0]/p

phin = (p-1) * (q-1)
c = "31c2fbff33dec7b070cf737c57393c8ab9982ae51b87b64d001a00aa74264254159e81e13b82ac5bc4d7f38aead06fabbf5b21ee668700a44673fac75bc09b084e79513ada3d11b248ae5fca74ba0c2f807e73052f3090ee61a3bd226e14f4b0544f952449623b8cbd01cc42ff5462c4904d0c28af6dbce73596de45279461fd".decode("hex")
c = bytes_to_long(c)
x = eGCD(e[0], phin)

m1 = x[1]
m2 = x[2]

flag = pow(c, m1, modulus_list[0])
flag = gmpy2.iroot((flag), 2)[0]
print(long_to_bytes(flag))



	




