from Crypto.Util.number import *
import gmpy2


n = 77202650311415801833630283321502377964966482322249067218618151335882206501824531238044997153792634687823541103305213787236688070084984972677082832759797487185893634773375836788083812107886478689588505026515948156262215742426576013857886885890664917326728268255522831945656467135232715326318534910980038746831

d = 43950038611297620437476726741259627683521285517505995832269170212100481291126713703102381842483626158780665807455547571417879903059351272496594037069674898050229621674353483998509589681734614426103884764405095636059167757553837564628882978842226779464565242824489178189279944091554028325489844541342024451721


e = 65537


k = 1 
x = (e*d-1)/k  
b = -(n+1 - x)
d = (b*b - 4*n)
y = (-b + gmpy2.iroot(d, 2)[0]) / 2

while True:
   if(inverse(e, x) == d and b<0 ):    
     	p = y
     	print(p)
        break
   k += 1
   x = (e*d-1)/k 
 
q = n/p
print(p*q == n)
print(p)
print(q)

